zero: I 0
one: I 1
two: I 2
ten: I 10
newLine: H 0A
charZero: H 30
signBit: H 80000000


main_i: I 2
main:
	LDA main_i
	STA isPrime_val
	BSA isPrime
	BZE main_next
	LDA main_i
	STA printInt_val
	BSA printInt
main_next:
	LDA main_i
	ADD one
	STA main_i
	AND signBit
	BZE main
	BUN opsys


isPrime_val: W 1
isPrime_i: W 1
isPrime: W 1
	LDA two
	STA isPrime_i
isPrime_loop:
	LDA isPrime_val
	DIV isPrime_i
	SUB isPrime_i
	AND signBit
	BZE isPrime_continue
	BUN isPrime_isPrime
isPrime_continue:
	LDA isPrime_val
	MOD isPrime_i
	IOR zero
	BZE isPrime_ret
	LDA isPrime_i
	ADD one
	STA isPrime_i
	BUN isPrime_loop
isPrime_isPrime:
	LDA one
	IOR one
isPrime_ret:
	BIN isPrime
